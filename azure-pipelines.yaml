trigger:
  batch: true
  branches:
    include:
    - master
    
pool:
  vmImage: ubuntu-latest
stages:
- stage: Build
  displayName: Build Modules
  jobs:
    - job: BuildModules
      steps:
        - checkout: self
        - task: DockerInstaller@0
          inputs:
            dockerVersion: '17.09.0-ce'
        - task: PowerShell@2
          inputs:
            targetType: 'inline'
            script: 'docker build -t bmcclure89/fc_pwsh_build Build/.'
        - task: PowerShell@2
          inputs:
            targetType: 'inline'
            script: 'gci; docker run --rm -w /build -v ${PWD}:/build bmcclure89/fc_pwsh_build'
        # - task: PowerShell@2
        #   displayName: Install-Modules
        #   inputs:
        #     targetType: 'inline'
        #     script: '[Net.ServicePointManager]::SecurityProtocol = [Net.ServicePointManager]::SecurityProtocol -bor [Net.SecurityProtocolType]::Tls12; Install-Module PSScriptAnalyzer,PSHTMLTable -Force'
        # - task: PowerShell@2
        #   displayName: 'Build-PowershelScripts'
        #   inputs:
        #       filePath: 'Modules/Build-ALLFCModules.ps1'
        - task: PowerShell@2
          displayName: Copy Source to artifact dir
          inputs:
            targetType: 'inline'
            script: |
              $excludes = ".git","docs" 
              $dropPath = "$(agent.builddirectory)\a\sourcePrep"
              if(-not(Test-Path $dropPath)){New-Item $dropPath -type Directory}
              Get-ChildItem  -Directory | Where-Object{$_.Name -notin $excludes} |  Copy-Item -Destination $dropPath -Recurse -Force   
        - task: PublishBuildArtifacts@1
          inputs:
            PathtoPublish: '$(agent.builddirectory)/a/sourcePrep'
            ArtifactName: 'builtSource'
            publishLocation: 'Container'
    - job: TestModules
      dependsOn: BuildModules
      steps:
        - checkout: none
        - task: DownloadPipelineArtifact@2
          inputs:
            buildType: 'current'
            artifactName: 'builtSource'
            targetPath: '$(Pipeline.Workspace)'
        - task: DockerInstaller@0
          inputs:
            dockerVersion: '17.09.0-ce'
        - task: PowerShell@2
          inputs:
            targetType: 'inline'
            script: 'docker build -t bmcclure89/fc_pwsh_tests Modules/Tests/.'
        - task: PowerShell@2
          inputs:
            targetType: 'inline'
            script: 'docker run --rm -w /tests -v ${PWD}:/tests bmcclure89/fc_pwsh_tests'
        - task: PublishTestResults@2
          inputs:
            testResultsFormat: 'NUnit'
            testResultsFiles: '**/PesterResults.xml'
    - job: PackageModules
      dependsOn: TestModules
      steps:
        - checkout: none
        - task: DownloadPipelineArtifact@2
          inputs:
            buildType: 'current'
            artifactName: 'builtSource'
            targetPath: '$(Pipeline.Workspace)'
        - task: NuGetToolInstaller@1
          inputs:
            versionSpec: '5.x'
        - task: NuGetCommand@2
          displayName: 'NuGet pack'
          inputs:
            command: pack
            packagesToPack: '**\*.nuspec'
        - task: CopyFiles@2
          inputs:
            SourceFolder: '$(agent.builddirectory)'
            Contents: '*'
            TargetFolder: '$(build.artifactstagingdirectory)'
        - task: PublishBuildArtifacts@1
          inputs:
            PathtoPublish: '$(Build.ArtifactStagingDirectory)'
            ArtifactName: 'builtSource'
            publishLocation: 'Container'